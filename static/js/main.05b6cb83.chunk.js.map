{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/http.service.js","app/services/profession.service.js","app/hooks/useProfession.jsx","app/services/qaulity.service.js","app/hooks/useQualities.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/services/localStorageService.js","app/services/user.service.js","app/hooks/useAuth.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/hooks/useUsers.jsx","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/hooks/useComments.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","isFirebase","containSlash","url","slice","Promise","reject","response","res","content","key","status","console","log","toast","httpService","get","post","put","delete","professionService","a","req","ProfessionContext","React","createContext","useProfessions","useContext","ProfessionProvider","children","isLoading","setLoading","professions","setProfessions","setError","errorCatcher","useEffect","getProfessionsList","Provider","getProfession","find","p","qualityService","fetchAll","QualitiesContex","useQualities","QualitiesProvider","qualities","setQualities","getQualities","getQuality","q","EditUserPage","email","password","profession","sex","setData","professionList","qualitiesList","setErrors","validatorConfog","isRequired","isEmail","isValid","onSubmit","e","preventDefault","values","TOKEN_KEY","REFRESH_TOKEN","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresData","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresData","getUserId","removeAuthData","removeItem","userEndpoint","userService","payload","getCurrentUser","httpAuth","params","AuthContext","useAuth","AuthProvider","currentUser","setUser","randomInt","min","max","Math","floor","random","rest","returnSecureToken","createUser","image","toString","substring","rate","completedMeetings","code","getUserData","Error","singUp","singIn","logOut","push","UserCard","user","location","pathname","src","width","role","Quality","color","Qualities","qual","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","UserContext","useUser","UserProvider","users","setUsers","getUsers","getUserById","userId","u","Comment","created","created_at","onRemove","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","CommentsContext","CommentsProvider","useParams","setComments","now","nanoid","prev","getCommentsFromLocalStorage","JSON","parse","stringify","removeComment","filter","c","Comments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","style","textAlign","Profession","prof","UserTable","onToggleBookMark","to","textDecoration","bookmark","UsersListPage","setCurrentPage","professionsLoading","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","enterError","setEnterError","handleSubmit","state","from","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","borderRadius","Main","NavProfile","isOpen","setOpen","position","right","NavBar","aria-current","ProtectedRoute","Component","render","props","LogOut","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05b6cb83.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  name: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id=\"validationCustom04\"\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  label: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport configFile from \"../config.json\";\r\n// import { httpAuth } from \"../hooks/useAuth\";\r\n// import localStorageService from \"./localStorageService\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    function (config) {\r\n        if (configFile.isFirebase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            // const expiresData = localStorageService.getTokenExpiresData();\r\n            // const refreshToken = localStorageService.getRefreshToken();\r\n            // if (refreshToken && expiresData < Date.now()) {\r\n            //     const { data } = await httpAuth.post(\"token\", {\r\n            //         grant_type: \"refresh_token\",\r\n            //         refresh_token: refreshToken\r\n            //     });\r\n            //     localStorageService.setTokens({\r\n            //         refreshToken: data.refresh_token,\r\n            //         idToken: data.id_token,\r\n            //         expiresIn: data.expires_in,\r\n            //         localId: data.user_id\r\n            //     });\r\n            // }\r\n            // const accessToken = localStorageService.getAccessToken();\r\n            // if (accessToken) {\r\n            //     config.params = { ...config.params, auth: accessToken };\r\n            // }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFirebase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Somthing was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const req = await httpService.get(professionEndpoint);\n        return req.data;\n    }\n};\nexport default professionService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport professionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n    return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [professions, setProfessions] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        getProfessionsList();\n    }, []);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    function getProfession(id) {\n        return professions.find((p) => p._id === id);\n    }\n\n    async function getProfessionsList() {\n        try {\n            const { content } = await professionService.get();\n            setProfessions(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    return (\n        <ProfessionContext.Provider\n            value={{ isLoading, professions, getProfession }}\n        >\n            {children}\n        </ProfessionContext.Provider>\n    );\n};\n\nProfessionProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport qualityService from \"../services/qaulity.service\";\n\nconst QualitiesContex = React.createContext();\n\nexport const useQualities = () => {\n    return useContext(QualitiesContex);\n};\n\nexport const QualitiesProvider = ({ children }) => {\n    const [qualities, setQualities] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getQualities = async () => {\n            try {\n                const { content } = await qualityService.fetchAll();\n                setQualities(content);\n                setLoading(false);\n            } catch (error) {\n                errorCatcher(error);\n            }\n        };\n        getQualities();\n    }, []);\n    const getQuality = (id) => {\n        return qualities.find((q) => q._id === id);\n    };\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <QualitiesContex.Provider\n            value={{\n                qualities,\n                getQuality,\n                isLoading\n            }}\n        >\n            {children}\n        </QualitiesContex.Provider>\n    );\n};\n\nQualitiesProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\n// import { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst EditUserPage = () => {\n    const { professions } = useProfessions();\n    const { qualities } = useQualities();\n    // const { userId } = useParams();\n    // const history = useHistory();\n    const [isLoading] = useState(false);\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: []\n    });\n\n    const professionList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // const isValid = validate();\n        // if (!isValid) return;\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                name=\"profession\"\n                                options={professionList}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                values\n                                name=\"qualities\"\n                                label=\"Выберите ваши качесвта\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","const TOKEN_KEY = \"jwt_token\";\r\nconst REFRESH_TOKEN = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt_expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    idToken,\r\n    localId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresData = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, localId);\r\n    localStorage.setItem(TOKEN_KEY, refreshToken);\r\n    localStorage.setItem(REFRESH_TOKEN, idToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresData);\r\n}\r\n\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(REFRESH_TOKEN);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_TOKEN);\r\n}\r\n\r\nexport function getTokenExpiresData() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresData,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorageService\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    }\n};\nexport default userService;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport userService from \"../services/user.service\";\r\nimport localStorageService, {\r\n    setTokens\r\n} from \"../services/localStorageService\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const httpAuth = axios.create({\r\n    baseURL: `https://identitytoolkit.googleapis.com/v1/`,\r\n    params: {\r\n        key: \"AIzaSyClG1I1CCUnIU4Bq_vxiGqpdNM00qlmMho\"\r\n    }\r\n});\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [currentUser, setUser] = useState();\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    function logOut() {\r\n        localStorageService.removeAuthData();\r\n        setUser(null);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    function randomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n    async function singUp({ email, password, ...rest }) {\r\n        const url = `accounts:signUp`;\r\n\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n            await createUser({\r\n                _id: data.localId,\r\n                email,\r\n                image: `https://avatars.dicebear.com/api/avataaars/${(\r\n                    Math.random() + 1\r\n                )\r\n                    .toString(36)\r\n                    .substring(7)}.svg`,\r\n                rate: randomInt(1, 5),\r\n                completedMeetings: randomInt(0, 200),\r\n                ...rest\r\n            });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_EXISTS\") {\r\n                    const errorObject = {\r\n                        email: \"Пользователь с таким Email уже существует\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    async function singIn({ email, password }) {\r\n        const url = `accounts:signInWithPassword`;\r\n\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n            await getUserData();\r\n        } catch (error) {\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                switch (message) {\r\n                    case \"INVALID_PASSWORD\":\r\n                        throw new Error(\"Email или пароль введены некорректно\");\r\n                    default:\r\n                        throw new Error(\r\n                            \"Слишком много попыток входа. Попробуйте позднее\"\r\n                        );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    async function getUserData() {\r\n        try {\r\n            const { content } = await userService.getCurrentUser();\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (localStorageService.getAccessToken()) {\r\n            getUserData();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <AuthContext.Provider value={{ singUp, singIn, currentUser, logOut }}>\r\n            {!isLoading ? children : \"Loading...\"}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const { currentUser } = useAuth();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {currentUser._id === user._id && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                        onClick={handleClick}\n                    >\n                        <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nconst Quality = ({ id }) => {\n    const { getQuality } = useQualities();\n    const { _id, color, name } = getQuality(id);\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loadind ...\";\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual} id={qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    function errorCatcher(error) {\n        const { message } = error;\n\n        setError(message);\n    }\n    function getUserById(userId) {\n        return users.find((u) => u._id === userId);\n    }\n    return (\n        <UserContext.Provider value={{ users, getUserById }}>\n            {!isLoading ? children : \"Loading....\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const { getUserById } = useUser();\n    const { currentUser } = useAuth();\n    const user = getUserById(userId);\n\n    return (\n        <>\n            <div className=\"bg-light card-body  mb-3\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={user.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        {currentUser._id === userId && (\n                                            <button\n                                                className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                                onClick={() => onRemove(id)}\n                                            >\n                                                <i className=\"bi bi-x-lg\"></i>\n                                            </button>\n                                        )}\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => {\n        return <Comment key={comment._id} {...comment} onRemove={onRemove} />;\n    });\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(\n            commentEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: '\"page\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    }\n};\nexport default commentService;\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport commentService from \"../services/comment.service\";\r\n\r\nconst CommentsContext = React.createContext();\r\n\r\nexport const useComments = () => {\r\n    return useContext(CommentsContext);\r\n};\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const { userId } = useParams();\r\n    const { currentUser } = useAuth();\r\n    const [comments, setComments] = useState();\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        addToLocalStorage();\r\n    }, [createComment]);\r\n\r\n    async function createComment(data) {\r\n        const comment = {\r\n            ...data,\r\n            pageId: userId,\r\n            created_at: Date.now(),\r\n            _id: nanoid(),\r\n            userId: currentUser._id\r\n        };\r\n        try {\r\n            const { content } = await commentService.createComment(comment);\r\n            setComments((prev) => [...prev, content]);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    function addToLocalStorage() {\r\n        localStorage.setItem(\"Newcomments\", JSON.stringify(comments));\r\n    }\r\n\r\n    function getCommentsFromLocalStorage() {\r\n        return JSON.parse(localStorage.getItem(\"Newcomments\") || \"[]\");\r\n    }\r\n\r\n    async function getComments() {\r\n        try {\r\n            const data = await getCommentsFromLocalStorage();\r\n            setComments(data);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    function removeComment(id) {\r\n        setComments((prev) => prev.filter((c) => c._id !== id));\r\n    }\r\n\r\n    // async function getComments() {\r\n    //     try {\r\n    //         const { content } = await commentService.getComments(userId);\r\n    //         console.log(content);\r\n    //         setComments(content);\r\n    //     } catch (error) {\r\n    //         errorCatcher(error);\r\n    //     } finally {\r\n    //         setLoading(false);\r\n    //     }\r\n    // }\r\n    function errorCatcher(error) {\r\n        const { message } = error;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <CommentsContext.Provider\r\n            value={{ comments, createComment, isLoading, removeComment }}\r\n        >\r\n            {children}\r\n        </CommentsContext.Provider>\r\n    );\r\n};\r\n\r\nCommentsProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import { orderBy } from \"lodash\";\nimport React from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useComments } from \"../../hooks/useComments\";\n\nconst Comments = () => {\n    const { createComment, comments, removeComment } = useComments();\n\n    const handleSubmit = (data) => {\n        createComment(data);\n    };\n    const handleRemoveComment = (id) => {\n        removeComment(id);\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { CommentsProvider } from \"../../../hooks/useComments\";\n\nconst UserPage = ({ userId }) => {\n    const { getUserById } = useUser();\n    const user = getUserById(userId);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsProvider>\n                            <Comments />\n                        </CommentsProvider>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <span {...rest} role=\"button\">\n            <i className={\"bi bi-bookmark-heart\" + (status ? \"-fill\" : \"\")}></i>\n        </span>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\" style={{ textAlign: \"center\" }}>\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React, { useProfessions } from \"../../hooks/useProfession\";\nimport PropTypes from \"prop-types\";\n\nconst Profession = ({ id }) => {\n    const { isLoading, getProfession } = useProfessions();\n\n    if (!isLoading) {\n        const prof = getProfession(id);\n        return <p>{prof.name}</p>;\n    } else return \"loading ...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark }) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link\n                    to={`/users/${user._id}`}\n                    style={{ textDecoration: \"none\", color: \"blue\" }}\n                >\n                    {user.name}\n                </Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const { currentUser } = useAuth();\n    const [currentPage, setCurrentPage] = useState(1);\n    const { isLoading: professionsLoading, professions } = useProfessions();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    function filterUsers(data) {\n        const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n        return filteredUsers.filter((u) => u._id !== currentUser._id);\n    }\n\n    const filteredUsers = filterUsers(users);\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    return (\n        <div className=\"d-flex\">\n            {professions && !professionsLoading && (\n                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                    <GroupList\n                        selectedItem={selectedProf}\n                        items={professions}\n                        onItemSelect={handleProfessionSelect}\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-2\"\n                        onClick={clearFilter}\n                    >\n                        Очиститть\n                    </button>\n                </div>\n            )}\n            <div className=\"d-flex flex-column mt-3\">\n                <SearchStatus length={count} />\n                <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    placeholder=\"Search...\"\n                    onChange={handleSearchQuery}\n                    value={searchQuery}\n                />\n                {count > 0 && (\n                    <UserTable\n                        users={usersCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onToggleBookMark={handleToggleBookMark}\n                    />\n                )}\n                <div className=\"d-flex justify-content-center\">\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UserProvider from \"../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <UserProvider>\n            {userId ? (\n                edit ? (\n                    <EditUserPage />\n                ) : (\n                    <UserPage userId={userId} />\n                )\n            ) : (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10 offset-md-2\">\n                            <UsersListPage />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </UserProvider>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const { singIn } = useAuth();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const [enterError, setEnterError] = useState(null);\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n        setEnterError(null);\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателкн для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        try {\n            await singIn(data);\n            history.push(\n                history.location.state\n                    ? history.location.state.from.pathname\n                    : \"/\"\n            );\n        } catch (error) {\n            setEnterError(error.message);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {enterError && <p className=\"text-danger\">{enterError}</p>}\n            <button\n                type=\"submit\"\n                disabled={!isValid || enterError}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { qualities } = useQualities();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const { professions } = useProfessions();\n    const professionList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должно состаять миниму из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const { singUp } = useAuth();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        try {\n            await singUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                name=\"profession\"\n                options={professionList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div\n                    className=\"col-md-6 offset-md-3 shadow p-4\"\n                    style={{ borderRadius: \"10px\" }}\n                >\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"d-flex justify-content-center mb-4\">\n                                Register\n                            </h3>\n                            <RegisterForm />\n                            <p className=\"mt-2\">\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"d-flex justify-content-center mb-4\">\n                                Login\n                            </h3>\n                            <LoginForm />\n                            <p className=\"mt-2\">\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import React from \"react\";\n// import { useMockData } from \"../utils/mockData\";\n\nconst Main = () => {\n    // const { initialize, status, progress, error } = useMockData();\n    // const handleClick = () => {\n    //     initialize();\n    // };\n\n    return (\n        <div className=\"container m-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-4\">\n                    <h3>Здесь могла бы быть ваша реклама</h3>\n                </div>\n            </div>\n            {/* <h1> Main Page</h1> */}\n            {/* <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>Error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                Инициализировать\n            </button> */}\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst NavProfile = () => {\n    const { currentUser } = useAuth();\n    const [isOpen, setOpen] = useState();\n\n    const toggleMenu = () => {\n        setOpen((prev) => !prev);\n    };\n    return (\n        <div className=\"dropdown\" onClick={toggleMenu}>\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\n                <div className=\"me-2\">{currentUser.name}</div>\n                <img\n                    src={currentUser.image}\n                    alt=\"\"\n                    height=\"40\"\n                    className=\"img-responsive rounded-circle\"\n                />\n            </div>\n            <div\n                className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}\n                style={{ position: \"absolute\", right: \"-7%\" }}\n            >\n                <Link\n                    to={`/users/${currentUser._id}`}\n                    className=\"dropdown-item\"\n                >\n                    Profile\n                </Link>\n                <Link to=\"/logout\" className=\"dropdown-item\">\n                    Log Out\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport NavProfile from \"./navProfile\";\n\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    return (\n        <div className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link \"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <>\n                    {currentUser ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link \"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    )}\n                </>\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!currentUser) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                return Component ? <Component {...props} /> : children;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func,\r\n    location: PropTypes.object,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nconst LogOut = () => {\n    const { logOut } = useAuth();\n\n    useEffect(() => {\n        logOut();\n    }, []);\n    return <h1>Loading...</h1>;\n};\n\nexport default LogOut;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQualities\";\nimport AuthProvider from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\n\nfunction App() {\n    return (\n        <div>\n            <AuthProvider>\n                <NavBar />\n                <QualitiesProvider>\n                    <ProfessionProvider>\n                        <Switch>\n                            <ProtectedRoute\n                                path=\"/users/:userId?/:edit?\"\n                                component={Users}\n                            />\n                            <Route path=\"/login/:type?\" component={Login} />\n                            <Route path=\"/logOut\" component={LogOut} />\n                            <Route path=\"/\" exact component={Main} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </ProfessionProvider>\n                </QualitiesProvider>\n            </AuthProvider>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}